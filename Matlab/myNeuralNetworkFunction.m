function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 03-Oct-2016 21:13:45.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 9xQ matrix, input #1
% and returns:
%   y = 2xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [0.1;0.1;0.1;0.1;0.1;0.1;0.1;0.1;0.1];
x1_step1_gain = [2.22222222222222;2.22222222222222;2.22222222222222;2.22222222222222;2.22222222222222;2.22222222222222;2.22222222222222;2.22222222222222;2.22222222222222];
x1_step1_ymin = -1;

% Layer 1
b1 = [-2.0064266886508548;-1.7517458736611105;1.6407546488626525;-1.5015176834172856;-1.1241514338909753;-1.0867071507877273;-0.72447345730218116;0.56442090819646951;-0.2012303349800762;-0.042712359123060727;0.31894997424641697;0.2571759661055375;0.51212542899126368;0.78126910459147492;1.0189723202232042;1.1087061503376272;-1.4665810083888677;-1.5649887261264488;-1.7265753695315749;-2.0170723027700852];
IW1_1 = [0.38892938309827652 -0.94761602981335336 -0.22032208179111565 -0.69030488742993956 -0.8852345770303699 0.62254824255536012 -0.52560789842909661 -0.619073334453074 -0.51826830037824623;-0.0040747417471447183 -0.18506148820827004 0.20757352422994366 -0.25214557791200054 0.94445621898598298 -1.1471800331332689 0.9433829029934554 0.69153337211440546 0.28589016733755579;-0.26438274314370369 -0.48191597802434222 0.77379601632735051 1.0394691121017257 -0.69036151249290389 0.65796720721687174 -0.20523850402145405 0.4184805576115494 -0.6417165409392579;0.20955644816353211 0.12404561434912512 -0.10568192459241417 0.43862358702886806 -1.224130771641073 0.71046746277342321 0.82409687781928642 -0.54212609426358138 0.3064975028849693;0.66664273008247665 0.79179363265532043 -0.10173111787646885 0.72225408320540252 0.5784341849333976 -0.81563538375006051 -0.73342241386344487 0.15458381815211533 0.81414625341352009;0.37599859431278437 -0.59170540493648183 0.66153411920426064 -0.002997949098018704 -0.98475894905618688 -0.051248502533498608 1.0228908847837364 -0.20842874688980245 0.7705616491083892;-0.039023874025512925 -0.36726451518697933 -0.14759265631622684 -0.96317981416945408 0.71244621121482987 0.68859507103234474 -0.96721072569709787 -0.84820020397241558 0.34269191298027113;-0.21991283256865168 0.75473354746100063 0.82049784957241678 0.26713218390362931 -0.72777237322403343 -0.03176609146046068 0.82013236631792774 -0.80449992716150287 0.8088185917081957;0.62462559839691612 -0.45179775278604895 -0.059276759883995514 -0.77825704382390826 -0.43354939554328353 0.97116355813469935 1.1081666600016393 -0.024193318625781293 0.66457513406593494;-0.58223605434123127 -1.4687933980255505 -0.050357045633526602 0.15884813117028196 0.44633014963131112 0.21270356435382556 0.089052773156880913 -0.90186505815781404 0.56833828961037125;0.29392366287538746 -0.0042622552191713681 0.0057588645180586618 0.50828991343549423 0.15586668069805798 1.0648250669988366 -1.0062066770556797 -0.48467503303353665 1.0138293923219137;0.90009084828097852 0.83822273325531516 -0.47008061118569677 0.29626776888192996 0.41507904597601769 0.7824855054513935 -0.62791204513972654 -0.33852581347580507 -0.88931572017954608;0.77977141437014341 -0.25947608139563488 -0.94023243908507015 0.2026287237782694 0.33759810733818668 -1.0242753152062787 0.46834671814212958 -0.74602123020617561 -0.52300598224819805;1.1511979056502222 0.57151442465967395 -0.69662097871929407 -0.12035811315375883 -0.10951777733099764 0.021720613197617311 0.86844401317002728 -0.070522726758404042 1.0041149447503526;0.77105752658248061 0.094056496934695782 0.57266749014501372 -0.6334055829447558 -0.85580416427443617 -0.072986346330967719 -1.0987799084123098 0.2587827932391924 0.45768208403325877;0.96247517244042913 -0.15906313629302349 -0.85031802417861013 -0.2281918297222294 0.78800525034655655 -0.073412420532688732 0.78802160965377188 -0.94516466897777973 -0.056301538108816759;-0.92661262650593657 -0.042820782926412469 0.61360611782018992 -0.82869420332555743 -0.43095118984814684 0.71183574478194267 0.79608407600134057 0.30104931201109569 0.44340167890592885;-1.2248722117009074 1.1092291003699739 0.51355782295378083 0.27100116305677385 0.3773559780106871 0.58705989510356604 -0.3927227652190553 -0.13654741235392356 -0.18375358926568797;-0.87114116780818296 -0.8716355153032147 0.80053034988518312 0.96217455478026714 0.74727294051607185 0.17776050814283129 0.29898530274454616 -0.13393260802679957 -0.26953043074907845;-0.53916562232523646 -0.44480389581186353 0.88108789023278289 -0.80321439575001419 -0.83498716080457236 -0.51720262577852516 -0.33182444078396606 -0.65730095802815969 -0.53048012995614946];

% Layer 2
b2 = [-0.71842748679511526;0.21469375388049411];
LW2_1 = [-0.21439268424871996 0.058755591698517476 0.67726922234314624 0.52889044796989693 0.039496267376837202 0.93675398120078657 0.87172736840100329 0.077545919464240942 0.27601640644240744 0.47013494297673591 -0.17388249648002041 -1.2386977069598968 0.096424894678310905 -0.94191002260759593 0.56378966887249626 -0.15057263586368203 0.92673156292945535 -0.45458404375982703 0.18591967074249857 1.064468048598306;-0.96039583446278609 -0.44736808784279619 0.38530746311634645 -0.020156183598930469 0.53715350186381094 0.093547717063921218 0.45719013390574281 0.99486951876541618 1.2922009911912049 -0.41829584120811292 0.95081148324211651 -0.41820688703643127 -0.067305751928101135 0.37735269863537774 -0.56525384988398741 -0.41342095648544286 0.26127847664175757 -0.77268808870655536 0.55969797463619231 0.276241787516188];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);

% Output 1
y1 = a2;
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n)
nmax = max(n,[],1);
n = bsxfun(@minus,n,nmax);
numer = exp(n);
denom = sum(numer,1);
denom(denom == 0) = 1;
a = bsxfun(@rdivide,numer,denom);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
